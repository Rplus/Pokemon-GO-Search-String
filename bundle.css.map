{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import pms from './data.pm.json';\n  import names from './data.name.json';\n  import langs from './data.lang.json';\n  import * as u from './u.js';\n\n  pms.forEach(pm => {\n    pm.uid = pm.dex + (pm.isotope ? `-${pm.isotope}` : '');\n    pm.ddex = `00${pm.dex}`.slice(-3);\n    pm.name = getPmName(pm.ddex, 'en');\n  });\n\n  const urlParamsWL = ['uid', 'min_iv', 'min_iv_a', 'min_iv_d', 'min_iv_s', 'min_lv', 'max_lv', 'lang', 'trash'];\n  const numberTypes = ['min_iv', 'min_iv_a', 'min_iv_d', 'min_iv_s', 'min_lv', 'max_lv'];\n\n  let data;\n\n  {\n    let defaultData = {\n      uid: '1',\n      min_iv: 44,\n      min_iv_a: 14,\n      min_iv_d: 13,\n      min_iv_s: 13,\n      min_lv: 0,\n      max_lv: 34,\n      lang: 'en',\n      trash: true,\n      cphp: null,\n    };\n\n    let urlp = new URLSearchParams(location.hash.replace(/^#/, ''))\n    let urlData = urlParamsWL.reduce((all, p) => {\n      if (urlp.has(p)) {\n        let v = urlp.get(p);\n        if (v === 'true' || v === 'false') {\n          v = !(v === 'false');\n        }\n        if (numberTypes.indexOf(p) !== -1) {\n          v = +v;\n        }\n        all[p] = v;\n      }\n      return all;\n    }, {});\n\n    data = {\n      ...defaultData,\n      ...urlData,\n    };\n  }\n\n  window.dd = data;\n\n  $: data.pm = getPM(data.uid);\n  $: data.pmName = getTitle(data.uid);\n  $: data.cphp = langs.find(l => l[0] === data.lang).slice(1, 3);\n  $: data.searchString = u.searchString(data);\n  $: location.hash = urlGoGoGo({\n    uid: data.uid,\n    min_iv: data.min_iv,\n    min_iv_a: data.min_iv_a,\n    min_iv_d: data.min_iv_d,\n    min_iv_s: data.min_iv_s,\n    min_lv: data.min_lv,\n    max_lv: data.max_lv,\n    lang: data.lang,\n    trash: data.trash,\n  });\n\n  let datalist;\n  $: datalist = pms.map(pm => {\n    return u.genOptions(pm.uid, getTitle(pm.uid, data.lang));\n  }).join('');\n\n  let textareaElm;\n  function copy() {\n    textareaElm.select();\n    document.execCommand('copy');\n  };\n\n  function urlGoGoGo(d) {\n    return new URLSearchParams(d).toString();\n  }\n\n  function getPM(uid) {\n    return pms.find(_pm => _pm.uid === uid);\n  }\n\n  function getPmName(ddex, lang = data.lang) {\n    return names[ddex][lang] || names[ddex].en;\n  }\n\n  function getTitle(uid) {\n    let pm = getPM(uid);\n    if (!pm) { return ''; }\n\n    let n = getPmName(pm.ddex);\n    if (pm.isotope) {\n      n = `${n} (${pm.isotope})`;\n    }\n    return n;\n  };\n\n</script>\n\n<style>\ninput {\n  max-width: 9em;\n}\ntextarea {\n  width: 100%;\n  height: 50%;\n  min-height: 8em;\n  padding: .6em .8em;\n  box-shadow: inset 1px 1px 5px rgba(0, 0, 0, .3);\n}\n\nfooter {\n  text-align: right;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.copy {\n  padding: .5em 1em;\n}\n\n.ib {\n  display: inline-block;\n}\n</style>\n\n<div class=\"workspace\">\n  <h1>Pokémon Go Search String Generateor</h1>\n\n  <div class=\"label\">\n    Pokémon:\n    <div class=\"ib\">\n      #<input\n        type=\"text\"\n        name=\"pmuid\"\n        required\n        list=\"pokemon\"\n        bind:value={ data.uid }\n      >\n      <span class=\"ib\">{ data.pmName }</span>\n    </div>\n\n    <datalist id=\"pokemon\">\n      {@html datalist }\n    </datalist>\n  </div>\n\n  <div class=\"label\">\n    <label>\n      Minimum %:\n      <select bind:value={ data.min_iv }>\n        {#each u.options.ivp as i}\n          <option value={i[0]}>{i[1]}</option>\n        {/each}\n      </select>\n    </label>\n  </div>\n\n  <div class=\"label\">\n    Min IVs (A/D/S):\n    <select bind:value={ data.min_iv_a }>\n      {#each u.options.iv as i}\n        <option value={i}>{i}</option>\n      {/each}\n    </select>\n\n    <select bind:value={ data.min_iv_d }>\n      {#each u.options.iv as i}\n        <option value={i}>{i}</option>\n      {/each}\n    </select>\n\n    <select bind:value={ data.min_iv_s }>\n      {#each u.options.iv as i}\n        <option value={i}>{i}</option>\n      {/each}\n    </select>\n  </div>\n\n  <div class=\"label\">\n    Level:\n    <select bind:value={ data.min_lv }>\n      {#each u.options.lv as i}\n        <option value={i[0]}>{i[1]}</option>\n      {/each}\n    </select>\n    -\n    <select bind:value={ data.max_lv }>\n      {#each u.options.lv as i}\n        <option value={i[0]}>{i[1]}</option>\n      {/each}\n    </select>\n  </div>\n\n  <div class=\"label\">\n    <label>\n      Language:\n      <select bind:value={ data.lang }>\n        {#each langs as i}\n          <option value={i[0]}>{i[3]}</option>\n        {/each}\n      </select>\n    </label>\n  </div>\n\n  <div class=\"label\">\n    <label>\n      Trash String:\n      <input type=\"checkbox\" bind:checked={ data.trash }>\n    </label>\n  </div>\n\n  <hr>\n\n  <div class=\"text-center\">\n    <button class=\"copy\" on:click|preventDefault={ copy }>Click to Copy!</button>\n  </div>\n\n  <textarea bind:value={ data.searchString } bind:this={ textareaElm }></textarea>\n\n  <hr>\n\n  <footer>\n    this tool fork from <a href=\"http://ark42.com/pogo/search.php\">http://ark42.com/pogo/search.php</a>\n  </footer>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA2GA,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,GAAG,CACf,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,AACjD,CAAC,AAED,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,YAAY,eAAC,CAAC,AACZ,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CAAC,GAAG,AACnB,CAAC,AAED,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,YAAY,AACvB,CAAC"
}